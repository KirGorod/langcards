name: Django Tests

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test_and_deploy:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_DB: github_actions
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build the Docker Compose file
      run: docker-compose -f docker-compose.yml build
      env:
        ENTRYPOINT_TYPE: dev
        APP_PORT: 8000
        DB_NAME: github_actions
        DB_USER: user
        DB_PASS: password
        DB_PORT: 5432
        DB_HOST: db
        DJANGO_SETTINGS_MODULE: core.settings.dev
        DJANGO_SECRET_KEY: secret_key

    - name: Up services
      run: docker-compose -f docker-compose.yml up -d
      env:
        ENTRYPOINT_TYPE: dev
        APP_PORT: 8000
        DB_NAME: github_actions
        DB_USER: user
        DB_PASS: password
        DB_PORT: 5432
        DB_HOST: db
        DJANGO_SETTINGS_MODULE: core.settings.dev
        DJANGO_SECRET_KEY: secret_key

    - name: Run tests
      run: docker-compose exec -T web python manage.py test --settings=core.settings.dev
      env:
        ENTRYPOINT_TYPE: dev
        APP_PORT: 8000
        DB_NAME: github_actions
        DB_USER: user
        DB_PASS: password
        DB_PORT: 5432
        DB_HOST: db
        DJANGO_SETTINGS_MODULE: core.settings.dev
        DJANGO_SECRET_KEY: secret_key

    - name: Shutdown services
      run: docker-compose down
      env:
        ENTRYPOINT_TYPE: dev
        APP_PORT: 8000
        DB_NAME: github_actions
        DB_USER: user
        DB_PASS: password
        DB_PORT: 5432
        DB_HOST: db
        DJANGO_SETTINGS_MODULE: core.settings.dev
        DJANGO_SECRET_KEY: secret_key

    - name: Deploy to dev server
      if: success()  # Only run if previous steps were successful
      env:
        HOST: 159.65.119.170
        USERNAME: deployer
        PRIVATE_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
      run: |
        # Install SSH client
        sudo apt-get install -y openssh-client
        # Write the SSH private key from secrets
        echo "$PRIVATE_KEY" > private_key
        chmod 600 private_key
        # SSH into the server
        ssh -o StrictHostKeyChecking=no -i private_key $USERNAME@$HOST <<-EOL
          cd /home/deployer/langcards
          git fetch --all
          git pull
          docker-compose down
          docker-compose up -d --build
        EOL
